1.npm 
2.Импрот файлов (export, import, require)
3.fetch и как им пользоваться
4.Работа с https

1. Node package manager нужен для установки и публикации пакетов, библиотек
* В файлах хранятся данные о зависимостях (package.json(кратко), package-lock.json(полно)).
* Установить пакеты в продакшен (npm install), на локальной машине (npm ci) и провести аудит пакетов (npm audit).
* Добавить пакет в репозиторий (npm publish).
------------------------------------------------
2. ---export
// 📁 say.js
function sayHi(user) {
  alert(`Hello, ${user}!`);
}

function sayBye(user) {
  alert(`Bye, ${user}!`);
}

export {sayHi, sayBye}; // список экспортируемых переменных

---import
// 📁 main.js
import {sayHi, sayBye} from './say.js';

sayHi('John'); // Hello, John!
sayBye('John'); // Bye, John!


---require - экспортирует объекты, чтобы потом импортировать

const http = require('http');

const server = http.createServer((req, res) => {
  res.writeHead(200, {'Content-Type': 'text/plain'});
  res.end('Привет, мир\n');
});

server.listen(3000);
------------------------------------------------
3. let promise = fetch(url, [options])
url – URL для отправки запроса.
options – дополнительные параметры: метод, заголовки и так далее.


----------без [options]
let url = 'https://api.github.com/repos/javascript-tutorial/en.javascript.info/commits';
let response = await fetch(url);

let commits = await response.json(); // читаем ответ в формате JSON

alert(commits[0].author.login);
---------- c [options]
fetch('https://api.github.com/repos/javascript-tutorial/en.javascript.info/commits')
  .then(response => response.json())
  .then(commits => alert(commits[0].author.login));

------------------------------------------------

1001710771198

1001297474998

113335000

242215700

57745500